@{
    ViewBag.Title = "Directions";
}

<head>
    <title>Mission Locator</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.0/jquery.min.js"></script>
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?key=AIzaSyAWZ4A8qMrspG-cvnP0qqVOwi225PRObhQ&callback=initMap"></script>
    <script type="text/javascript"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
</head>

<body onload="initialize()">
    <div class="row">
        <div class="col-md-12">
            <h1 style="font-weight: bold;">Map Directions</h1>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div id="map_canvas" style="height:300px; " background-color lightblue;"></div>
        </div>
    </div>
    <form action="#" onsubmit="calcRoute();return false;" id="routeForm">
        <label>
            From: <br />
            <input type="text" id="routeStart" value="Provo Utah">
            <a href="#" class="autoLink" style="display: none;">Use current location: <span>not found</span></a>
        </label>
       
            <label>
                To: <br />
                <input type="text" id="routeEnd" value="@ViewBag.Address">
            </label>
       
            
            
        <label><input type="radio" name="travelMode" value="DRIVING" checked /> Driving</label>
        <label><input type="radio" name="travelMode" value="BICYCLING" /> Bicycling</label>
        <label><input type="radio" name="travelMode" value="TRANSIT" /> Public transport</label>
        <label><input type="radio" name="travelMode" value="WALKING" /> Walking</label>
        <input type="submit" value="Calculate route">
    </form>
    <div id="directionsPanel">
        Enter a starting point and click "Calculate route".
    </div>
    <script>
        var directionDisplay, map;
        var directionsService = new google.maps.DirectionsService();
        var geocoder = new google.maps.Geocoder();

        function initialize() {

            var latlng = new google.maps.LatLng(40.2338, -111.6585);

            var rendererOptions = { draggable: true };
            directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);

            var myOptions = {
                zoom: 14,
                center: latlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                mapTypeControl: false
            };

            map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

            directionsDisplay.setMap(map);

            directionsDisplay.setPanel(document.getElementById("directionsPanel"));

            if (navigator.geolocation) {

                navigator.geolocation.getCurrentPosition(foundYou, notFound);
            } else {

                alert('Geolocation not supported or not enabled.');
            }
        }
        
        function notFound(msg) {
            alert('Could not find your location :(')
        }

        function foundYou(position) {
          
            var latlng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
      
            geocoder.geocode({ 'latLng': latlng }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                  
                    if (results[0]) {
                  
                        marker = new google.maps.Marker({
                            position: latlng,
                            map: map
                        });
                    
                        var address = results[0].address_components[1].long_name + ' ' + results[0].address_components[0].long_name + ', ' + results[0].address_components[3].long_name
                       
                        $('.autoLink span').html(address).parent().show().click(function () {
                          
                            $('#routeStart').val(address);
                        
                            calcRoute();
                        });
                    }
                } else {
                 

                }
            });
        }

        function calcRoute() {
       
            var travelMode = $('input[name="travelMode"]:checked').val();
            var start = $("#routeStart").val();
            var end = $("#routeEnd").val();
         
            var request = {
                origin: start,
                destination: end,
                unitSystem: google.maps.UnitSystem.IMPERIAL,
                travelMode: google.maps.DirectionsTravelMode[travelMode]
            };
        
            directionsService.route(request, function (response, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                  
                    $('#directionsPanel').empty();
                 
                    directionsDisplay.setDirections(response);
                } else {
                  
                    if (status == 'ZERO_RESULTS') {
                        alert('No route could be found between the origin and destination.');
                    } else if (status == 'UNKNOWN_ERROR') {
                        alert('A directions request could not be processed due to a server error. The request may succeed if you try again.');
                    } else if (status == 'REQUEST_DENIED') {
                        alert('This webpage is not allowed to use the directions service.');
                    } else if (status == 'OVER_QUERY_LIMIT') {
                        alert('The webpage has gone over the requests limit in too short a period of time.');
                    } else if (status == 'NOT_FOUND') {
                        alert('At least one of the origin, destination, or waypoints could not be geocoded.');
                    } else if (status == 'INVALID_REQUEST') {
                        alert('The DirectionsRequest provided was invalid.');
                    } else {
                        alert("There was an unknown error in your request. Requeststatus: nn" + status);
                    }
                }
            });
        }

        </script>

     </body>

